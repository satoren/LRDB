name: Release
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_wasm:
    name: build for node.js
    runs-on: ubuntu-latest
    steps:
      - uses: mymindstorm/setup-emsdk@v13
      - uses: actions/checkout@v4
      - run: cmake -E make_directory build
      - run: emcmake cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release
        working-directory: build
      - run: cmake --build . && cmake --build . --target install
        working-directory: build
      - name: Archive build result for js
        uses: actions/upload-artifact@v4
        with:
          name: node_lua_with_lrdb
          path: node/bin/node_lua_with_lrdb.*

  publish:
    needs: build_wasm
    name: Publish to NPM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      - name: Download a node_lua_with_lrdb
        uses: actions/download-artifact@v4
        with:
          name: node_lua_with_lrdb
          path: node/bin/
      - run: npm ci
        working-directory: node
      - run: npm run bundle
        working-directory: node
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Update package version
        run: npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version
        working-directory: node
      - name: Publish to NPM
        run: npm publish
        working-directory: node
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
  create_release:
    needs: publish
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: node_lua_with_lrdb
          path: artifacts/
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
          generate_release_notes: true
