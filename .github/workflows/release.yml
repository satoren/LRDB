name: Release
on:
  push:
    tags:
      - 'v*'
jobs:
  build_wasm:
    name: build for node.js
    runs-on: ubuntu-latest
    steps:
      - uses: mymindstorm/setup-emsdk@v13
      - uses: actions/checkout@v4
      - run: cmake -E make_directory build
      - run: emcmake cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release
        working-directory: build
      - run: cmake --build . && cmake --build . --target install
        working-directory: build
      - name: Archive build result for js
        uses: actions/upload-artifact@v4
        with:
          name: node_lua_with_lrdb
          path: node/bin/node_lua_with_lrdb.*


  release:
    needs: build_wasm
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download node_lua_with_lrdb
        uses: actions/download-artifact@v4
        with:
          name: node_lua_with_lrdb
          path: artifacts/node/
      - name: Download lua module
        uses: actions/download-artifact@v4
        with:
          name: lua_module
          path: artifacts/lua_module/
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Create NPM package
        run: |
          mkdir -p node/bin/
          cp -r artifacts/node/* node/bin/
          cd node
          npm ci
          npm run bundle
          npm pack
          mkdir -p ../artifacts/npm/
          mv *.tgz ../artifacts/npm/
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
      - name: Publish to NPM
        if: success()
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd node
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          npm publish
